USE SoftUni

GO

CREATE PROCEDURE usp_GetEmployeesSalaryAbove35000 
AS
BEGIN
		SELECT FirstName, LastName
		FROM Employees
		WHERE Salary > 35000
END

EXEC usp_GetEmployeesSalaryAbove35000


GO

CREATE PROCEDURE usp_GetEmployeesSalaryAboveNumber(@number DECIMAL(18, 4))
AS
BEGIN
	SELECT FirstName, LastName
	FROM Employees
	WHERE Salary >= @number
END

EXEC usp_GetEmployeesSalaryAboveNumber 48100


GO 

CREATE PROCEDURE usp_GetTownsStartingWith(@startingString NVARCHAR(50))
AS
BEGIN
	DECLARE @stringLength INT = LEN(@startingString)
	SELECT [Name] FROM Towns
	WHERE LEFT([Name], @stringLength) = @startingString
END

EXEC usp_GetTownsStartingWith 'b'


GO

CREATE PROCEDURE usp_GetEmployeesFromTown(@townNameInput VARCHAR(50))
AS
BEGIN
	SELECT e.FirstName, e.LastName FROM Employees AS e
	INNER JOIN Addresses AS a
	ON e.AddressID = a.AddressID
	INNER JOIN Towns AS t
	ON a.TownID = t.TownID
	WHERE t.[Name] = @townNameInput
END

EXEC usp_GetEmployeesFromTown 'Sofia'


GO 

CREATE FUNCTION ufn_GetSalaryLevel(@salary DECIMAL(18, 4))
RETURNS NVARCHAR(10)
AS
BEGIN
	DECLARE @salaryLevel NVARCHAR(10)
	IF (@salary < 30000)
		SET @salaryLevel = 'Low'
	ELSE IF (@salary >= 30000 AND @salary <= 50000)
		SET @salaryLevel = 'Average'
	ELSE
		SET @salaryLevel = 'High'

	RETURN @salaryLevel
END

GO 

CREATE PROCEDURE usp_EmployeesBySalaryLevel(@salaryParameter NVARCHAR(10))
AS
BEGIN
	SELECT FirstName, LastName FROM Employees
	WHERE dbo.ufn_GetSalaryLevel(Salary) = @salaryParameter
END

EXEC usp_EmployeesBySalaryLevel 'High'


GO

CREATE FUNCTION ufn_IsWordComprised(@setOfLetters NVARCHAR(MAX), @word NVARCHAR(MAX))
RETURNS BIT
AS
BEGIN
	DECLARE @i INT = 1
	DECLARE @wordLength INT = LEN(@word)

	WHILE(@i <= @wordLength)
	BEGIN
		DECLARE @currentChar CHAR = SUBSTRING(@word, @i, 1);
		DECLARE @charIndex INT = CHARINDEX(@currentChar, @setOfLetters);

		IF (@charIndex = 0)
		BEGIN
			RETURN 0;
		END

		SET @i += 1;
	END

	RETURN 1
END

GO

CREATE PROCEDURE usp_DeleteEmployeesFromDepartment (@departmentId INT)
AS
BEGIN
	DELETE FROM EmployeesProjects
	WHERE EmployeeID IN (
							SELECT EmployeeID FROM Employees
							WHERE DepartmentID = @departmentId
						)

	UPDATE Employees
	SET ManagerID = NULL
	WHERE ManagerID IN (
							SELECT EmployeeID FROM Employees
							WHERE DepartmentID = @departmentId
					   )

	ALTER TABLE Departments
	ALTER COLUMN ManagerID INT

	UPDATE Departments
	SET ManagerID = NULL
	WHERE ManagerID IN (
							SELECT EmployeeID FROM Employees
							WHERE DepartmentID = @departmentId
						)

	DELETE FROM Employees
	WHERE DepartmentID = @departmentId

	DELETE FROM Departments
	WHERE DepartmentID = @departmentId

	SELECT COUNT(*) FROM Employees
	WHERE DepartmentID = @departmentId
END

SELECT * FROM Employees
SELECT * FROM Addresses
SELECT * FROM Towns
