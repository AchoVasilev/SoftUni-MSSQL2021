SELECT c.CountryCode, m.MountainRange, p.PeakName, p.Elevation FROM Countries AS c
INNER JOIN MountainsCountries AS mc
ON c.CountryCode = mc.CountryCode
INNER JOIN Mountains AS m
ON mc.MountainId = m.Id
INNER JOIN Peaks AS p
ON p.MountainId = m.Id
WHERE c.CountryCode = 'BG' AND p.Elevation >= 2835
ORDER BY p.Elevation DESC

SELECT CountryCode, COUNT(MountainID) AS [MountainRanges] FROM MountainsCountries
WHERE CountryCode IN ('US', 'RU', 'BG')
GROUP BY CountryCode

SELECT TOP(5) c.CountryName, r.RiverName FROM Countries AS c
LEFT OUTER JOIN CountriesRivers AS cr
ON c.CountryCode = cr.CountryCode
LEFT OUTER JOIN Rivers AS r
ON r.Id = cr.RiverId
INNER JOIN Continents AS co
ON c.ContinentCode = co.ContinentCode
WHERE co.ContinentName = 'Africa'
ORDER BY c.CountryName ASC

SELECT ContinentCode, CurrencyCode, CurrencyCount AS [CurrencyUsage]
FROM (
		SELECT ContinentCode, CurrencyCode, [CurrencyCount], DENSE_RANK() OVER
		(PARTITION BY ContinentCode ORDER BY CurrencyCount DESC) AS [CurrencyRank]
		FROM(
			  SELECT ContinentCode, CurrencyCode, COUNT(*) AS [CurrencyCount]
			  FROM Countries
			  GROUP BY ContinentCode, CurrencyCode
			  ) AS [CurrencyCountQuery]
		WHERE CurrencyCount > 1
		) AS [CurrencyRankingQuery]
WHERE CurrencyRank = 1
ORDER BY ContinentCode

SELECT COUNT(*) AS [Count] FROM Countries AS c
LEFT OUTER JOIN MountainsCountries AS mc
ON c.CountryCode = mc.CountryCode
LEFT OUTER JOIN Mountains AS m
ON m.Id = mc.MountainId
WHERE m.MountainRange IS NULL

SELECT TOP (5) CountryName, MAX(p.Elevation) AS [Highest Peak Elevation], MAX(r.[Length]) AS [Longest River Length]
FROM Countries AS c
LEFT OUTER JOIN CountriesRivers AS cr
ON cr.CountryCode = c.CountryCode
LEFT OUTER JOIN Rivers AS r
ON cr.RiverId = r.Id
LEFT OUTER JOIN MountainsCountries AS mc
ON c.CountryCode = mc.CountryCode
LEFT OUTER JOIN Mountains AS m
ON mc.MountainId = m.Id
LEFT OUTER JOIN Peaks AS p
ON p.MountainId = m.Id
GROUP BY c.CountryName
ORDER BY [Highest Peak Elevation] DESC, [Longest River Length] DESC, CountryName ASC

SELECT TOP (5) Country,
CASE
	WHEN PeakName IS NULL THEN '(no highest peak)'
	ELSE PeakName
END AS [Highest Peak Name],
CASE 
	WHEN Elevation IS NULL THEN 0
	ELSE Elevation
END AS [Highest Peak Elevation],
CASE
	WHEN MountainRange IS NULL THEN '(no mountain)'
	ELSE MountainRange
END AS [Mountain]
FROM (SELECT *, 
				DENSE_RANK() OVER (PARTITION BY [Country] ORDER BY [Elevation] DESC) AS [PeakRank]
			FROM(
				SELECT CountryName AS [Country],
				p.PeakName, p.Elevation, m.MountainRange
				FROM Countries AS c
				LEFT OUTER JOIN MountainsCountries AS mc
				ON c.CountryCode = mc.CountryCode
				LEFT OUTER JOIN Mountains AS m
				ON mc.MountainId = m.Id
				LEFT OUTER JOIN Peaks AS p
				ON p.MountainId = m.Id
				) AS [FullInfoQuery]
			) AS [PeakRankingsQuery]
WHERE PeakRank = 1
ORDER BY Country ASC, [Highest Peak Name] ASC
